{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# FINAL PROJECT. PART 1. TEXT PROCESSING"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package stopwords to\n",
      "[nltk_data]     C:\\Users\\kiree\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Unzipping corpora\\stopwords.zip.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "nltk.download('stopwords')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import defaultdict\n",
    "from array import array\n",
    "from nltk.stem import PorterStemmer\n",
    "from nltk.corpus import stopwords\n",
    "import math\n",
    "import numpy as np\n",
    "import collections\n",
    "from numpy import linalg as la\n",
    "import time\n",
    "import json\n",
    "import re\n",
    "import unidecode"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Transforming the .txt document into .json file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "with open('dataset_tweets_WHO.txt') as f:\n",
    "    json_data = json.load(f)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Text Processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "stemmer = PorterStemmer()\n",
    "stop_words = set(stopwords.words(\"english\"))\n",
    "def cleanText(text):\n",
    "    text = unidecode.unidecode(text)\n",
    "    a = text.lower() #put everything in lowercase\n",
    "    result = re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)\",\" \",a) #cleaning data\n",
    "    result = result.split() #tokenize\n",
    "    result = [word for word in result if word not in stop_words ] #removing stop words\n",
    "    result = [stemmer.stem(word) for word in result] #stemming\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Comparison of the original text with the preprocessed one"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "It's International Day for Disaster Risk Reduction\n",
      "\n",
      "#OpenWHO has launched a multi-tiered core curriculum to help equip you with the competencies needed to work within public health emergency response.\n",
      "\n",
      "Start learning today &amp; be #Ready4Response:\n",
      "üëâ https://t.co/hBFFOF0xKL https://t.co/fgZY22RWuS\n"
     ]
    }
   ],
   "source": [
    "print(json_data['0']['full_text'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['intern', 'day', 'disast', 'risk', 'reduct', 'openwho', 'launch', 'multi', 'tier', 'core', 'curriculum', 'help', 'equip', 'compet', 'need', 'work', 'within', 'public', 'health', 'emerg', 'respons', 'start', 'learn', 'today', 'amp', 'ready4respons']\n"
     ]
    }
   ],
   "source": [
    "print(cleanText(json_data['0']['full_text']))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Putting the preprocessed text back into the dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in json_data.keys():\n",
    "    json_data[i]['full_text'] = cleanText(json_data[i]['full_text'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'created_at': 'Mon Oct 11 20:41:54 +0000 2021',\n",
       " 'id': 1447663774811541508,\n",
       " 'id_str': '1447663774811541508',\n",
       " 'full_text': ['peopl',\n",
       "  'around',\n",
       "  'breath',\n",
       "  'unhealthi',\n",
       "  'level',\n",
       "  'airpollut',\n",
       "  'larg',\n",
       "  'result',\n",
       "  'burn',\n",
       "  'fossil',\n",
       "  'fuel',\n",
       "  'drive',\n",
       "  'climatechang',\n",
       "  'climateact',\n",
       "  'could',\n",
       "  'reduc',\n",
       "  'total',\n",
       "  'number',\n",
       "  'global',\n",
       "  'death',\n",
       "  'air',\n",
       "  'pollut',\n",
       "  '80'],\n",
       " 'truncated': False,\n",
       " 'display_text_range': [0, 246],\n",
       " 'entities': {'hashtags': [{'text': 'AirPollution', 'indices': [48, 61]},\n",
       "   {'text': 'ClimateChange', 'indices': [115, 129]},\n",
       "   {'text': 'ClimateAction', 'indices': [133, 147]}],\n",
       "  'symbols': [],\n",
       "  'user_mentions': [],\n",
       "  'urls': [{'url': 'https://t.co/43l5mmAwOq',\n",
       "    'expanded_url': 'http://bit.ly/3EMJ6Ob',\n",
       "    'display_url': 'bit.ly/3EMJ6Ob',\n",
       "    'indices': [223, 246]}],\n",
       "  'media': [{'id': 1447663767307816960,\n",
       "    'id_str': '1447663767307816960',\n",
       "    'indices': [247, 270],\n",
       "    'media_url': 'http://pbs.twimg.com/media/FBcihryWEAAjXXm.jpg',\n",
       "    'media_url_https': 'https://pbs.twimg.com/media/FBcihryWEAAjXXm.jpg',\n",
       "    'url': 'https://t.co/Qz5kERdI1x',\n",
       "    'display_url': 'pic.twitter.com/Qz5kERdI1x',\n",
       "    'expanded_url': 'https://twitter.com/WHO/status/1447663774811541508/photo/1',\n",
       "    'type': 'photo',\n",
       "    'sizes': {'thumb': {'w': 150, 'h': 150, 'resize': 'crop'},\n",
       "     'medium': {'w': 1200, 'h': 777, 'resize': 'fit'},\n",
       "     'small': {'w': 680, 'h': 440, 'resize': 'fit'},\n",
       "     'large': {'w': 1920, 'h': 1243, 'resize': 'fit'}}}]},\n",
       " 'extended_entities': {'media': [{'id': 1447663767307816960,\n",
       "    'id_str': '1447663767307816960',\n",
       "    'indices': [247, 270],\n",
       "    'media_url': 'http://pbs.twimg.com/media/FBcihryWEAAjXXm.jpg',\n",
       "    'media_url_https': 'https://pbs.twimg.com/media/FBcihryWEAAjXXm.jpg',\n",
       "    'url': 'https://t.co/Qz5kERdI1x',\n",
       "    'display_url': 'pic.twitter.com/Qz5kERdI1x',\n",
       "    'expanded_url': 'https://twitter.com/WHO/status/1447663774811541508/photo/1',\n",
       "    'type': 'photo',\n",
       "    'sizes': {'thumb': {'w': 150, 'h': 150, 'resize': 'crop'},\n",
       "     'medium': {'w': 1200, 'h': 777, 'resize': 'fit'},\n",
       "     'small': {'w': 680, 'h': 440, 'resize': 'fit'},\n",
       "     'large': {'w': 1920, 'h': 1243, 'resize': 'fit'}}}]},\n",
       " 'source': '<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>',\n",
       " 'in_reply_to_status_id': 1447639965467299847,\n",
       " 'in_reply_to_status_id_str': '1447639965467299847',\n",
       " 'in_reply_to_user_id': 14499829,\n",
       " 'in_reply_to_user_id_str': '14499829',\n",
       " 'in_reply_to_screen_name': 'WHO',\n",
       " 'user': {'id': 14499829,\n",
       "  'id_str': '14499829',\n",
       "  'name': 'World Health Organization (WHO)',\n",
       "  'screen_name': 'WHO',\n",
       "  'location': 'Geneva, Switzerland',\n",
       "  'description': 'We are the #UnitedNations‚Äô health agency - #HealthForAll.\\n‚ñ∂Ô∏è Always check our latest tweets on #COVID19 for updated advice/information.',\n",
       "  'url': 'https://t.co/wVulKuROWG',\n",
       "  'entities': {'url': {'urls': [{'url': 'https://t.co/wVulKuROWG',\n",
       "      'expanded_url': 'http://www.who.int',\n",
       "      'display_url': 'who.int',\n",
       "      'indices': [0, 23]}]},\n",
       "   'description': {'urls': []}},\n",
       "  'protected': False,\n",
       "  'followers_count': 9963586,\n",
       "  'friends_count': 1743,\n",
       "  'listed_count': 34215,\n",
       "  'created_at': 'Wed Apr 23 19:56:27 +0000 2008',\n",
       "  'favourites_count': 11879,\n",
       "  'utc_offset': None,\n",
       "  'time_zone': None,\n",
       "  'geo_enabled': True,\n",
       "  'verified': True,\n",
       "  'statuses_count': 64983,\n",
       "  'lang': None,\n",
       "  'contributors_enabled': False,\n",
       "  'is_translator': False,\n",
       "  'is_translation_enabled': False,\n",
       "  'profile_background_color': 'D0ECF8',\n",
       "  'profile_background_image_url': 'http://abs.twimg.com/images/themes/theme1/bg.png',\n",
       "  'profile_background_image_url_https': 'https://abs.twimg.com/images/themes/theme1/bg.png',\n",
       "  'profile_background_tile': True,\n",
       "  'profile_image_url': 'http://pbs.twimg.com/profile_images/875476478988886016/_l61qZdR_normal.jpg',\n",
       "  'profile_image_url_https': 'https://pbs.twimg.com/profile_images/875476478988886016/_l61qZdR_normal.jpg',\n",
       "  'profile_banner_url': 'https://pbs.twimg.com/profile_banners/14499829/1610970935',\n",
       "  'profile_link_color': '0396DB',\n",
       "  'profile_sidebar_border_color': '8C8C8C',\n",
       "  'profile_sidebar_fill_color': 'D9D9D9',\n",
       "  'profile_text_color': '000000',\n",
       "  'profile_use_background_image': True,\n",
       "  'has_extended_profile': True,\n",
       "  'default_profile': False,\n",
       "  'default_profile_image': False,\n",
       "  'following': False,\n",
       "  'follow_request_sent': False,\n",
       "  'notifications': False,\n",
       "  'translator_type': 'regular',\n",
       "  'withheld_in_countries': []},\n",
       " 'geo': None,\n",
       " 'coordinates': None,\n",
       " 'place': None,\n",
       " 'contributors': None,\n",
       " 'is_quote_status': False,\n",
       " 'retweet_count': 97,\n",
       " 'favorite_count': 250,\n",
       " 'favorited': False,\n",
       " 'retweeted': False,\n",
       " 'possibly_sensitive': False,\n",
       " 'lang': 'en'}"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#proof that the text is stored appropriately\n",
    "json_data['20']"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
